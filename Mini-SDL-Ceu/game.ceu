#include "sdl.ceu"

input void SDL_REDRAW;
input void SDL_QUIT;
input int  SDL_DT;
input _SDL_KeyboardEvent&& SDL_KEYDOWN;
input _SDL_KeyboardEvent&& SDL_KEYUP;
input _SDL_MouseButtonEvent&& SDL_MOUSEBUTTONDOWN;

var _SDL_Window&? window;
    finalize
        window = &_SDL_CreateWindow("Jogo",
                    _SDL_WINDOWPOS_UNDEFINED,
                    _SDL_WINDOWPOS_UNDEFINED,
                    640, 480, _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(&&window!);
    end

var _SDL_Renderer&? renderer;
    finalize
        renderer = &_SDL_CreateRenderer(&&window!, -1, 0);
    with
        _SDL_DestroyRenderer(&&renderer!);
    end

class Player with
    var _SDL_Renderer& ren;
    var _SDL_Rect r;
    event void been_hit;
do
    var int x = (640/2 - 20/2) * 1000;
    var int y = (480-50) * 1000;
    var int vx = 0;
    var int vy = 0;

    par/or do
        par do
            every dt in SDL_DT do
                x = x + vx*dt;
                y = y + vy*dt;
            end
        with
            par do
                loop do
                    var _SDL_KeyboardEvent&& key;
                    key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_LEFT;
                    vx = -100;
                    key = await SDL_KEYUP   until key:keysym.sym==_SDLK_LEFT;
                    vx = 0;
                end
            with
                loop do
                    var _SDL_KeyboardEvent&& key;
                    key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_RIGHT;
                    vx = 100;
                    key = await SDL_KEYUP   until key:keysym.sym==_SDLK_RIGHT;
                    vx = 0;
                end
            end
        with
            every SDL_REDRAW do
                _SDL_SetRenderDrawColor(&&this.ren,
                                        0x00,0x00,0x00,0x00);
                r.x = x / 1000;
                r.y = y / 1000;
                _SDL_RenderFillRect(&&this.ren, &&r);
            end
        end
    with
        await been_hit;
    end
end


class Rain with
    var _SDL_Renderer&  ren;
    var _SDL_Rect       r;
    var int             speed;
    var Player&         p;

    event void hit_ground;
    event void hit_something;
do
    var int y = this.r.y * 1000;
    par/or do
        par/or do
            every dt in SDL_DT do
                y = y + dt* this.speed;
                if y > 480000 then
                    emit hit_ground;
                else/if _SDL_HasIntersection(&&this.r,&&p.r) then
                    emit p.been_hit;
                    emit hit_something;
                end
            end
        with
            await this.hit_ground;
        end

    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&this.ren,
                                        0xDD,0xDD,0x00,0xDD);
            this.r.y = y / 1000;
            _SDL_RenderFillRect(&&this.ren, &&this.r);
        end
    end  

end

class Cloud with
    var _SDL_Renderer& ren;
    var _SDL_Rect      r;
    var int            vx;
    var Player&         p;
do
    var int x = -this.r.w * 1000;
    par do
        every dt in SDL_DT do
            x = x + this.vx*dt;
            if x > 640000 then
                x = 0;
            end
        end
    with
        pool Rain[] rains;
        every 500ms do
            var int do_spawn = _rand()%10;

            if do_spawn%3 == 0 then
                spawn Rain in rains with
                    var int w = 8;
                    var int h = 15;
                    var int y = r.y;
                    var int x2 = r.x;
                    this.p = &p;
                    this.ren = &ren;

                    this.r   = _SDL_Rect(x2,200,w,h);
                    this.speed = 30 + _rand()%50;;
                end;
            end

        end
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&this.ren,
                                    0xDD,0xDD,0xDD,0x00);
            this.r.x = x / 1000;
            _SDL_RenderFillRect(&&this.ren, &&this.r);
        end
    end
end


_srand(_time(null));

par/or do
    await SDL_QUIT;
with
    every SDL_REDRAW do
        _SDL_SetRenderDrawColor(&&renderer!,
                                0xFF,0xFF,0xFF,0x00);
        _SDL_RenderFillRect(&&renderer!, null);
    end
with
    var Player p with
        this.ren = &renderer!;
        this.r = _SDL_Rect(0,0, 20,50);
    end;
    var Cloud[3] _ with
        var int w = 50 + _rand()%200;
        var int h = 20 + _rand()%50;
        var int y = h + _rand()%200;
        this.ren = &renderer!;
        this.r   = _SDL_Rect(0,y,w,h);
        this.vx  = 10 + _rand()%50;
        this.p = &p;
    end;

    await p.been_hit;
with
    every SDL_REDRAW do
        _SDL_RenderPresent(&&renderer!);
    end
end

escape 0;

// e63b95a6905d278fb2ea187f8cad63ede552b4d6
